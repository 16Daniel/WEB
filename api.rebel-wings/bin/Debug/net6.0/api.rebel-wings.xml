<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api.rebel-wings</name>
    </assembly>
    <members>
        <member name="T:api.rebel_wings.Controllers.AlarmController">
            <summary>
            Controlador de Alarma
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlarmController.#ctor(biz.rebel_wings.Repository.Alarm.IAlarmRepository,biz.rebel_wings.Repository.Alarm.IPhotoAlarmRepository,biz.rebel_wings.Services.Logger.ILoggerManager,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="alarmRepository"></param>
            <param name="photoAlarmRepository"></param>
            <param name="loggerManager"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlarmController.GetById(System.Int32)">
            <summary>
            GET:
            Obtiene por ID de Alarma
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlarmController.Post(api.rebel_wings.Models.Alarm.AlarmDto)">
            <summary>
            POST:
            Agregar nuevo registro
            </summary>
            <param name="alarm">Objeto de alarma</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlarmController.Put(api.rebel_wings.Models.Alarm.AlarmDto)">
            <summary>
            PUT:
            Actualizar 
            </summary>
            <param name="alarm"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlarmController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.AlbaranController">
            <summary>
            Albaran Controlador
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.bd1.Repository.Albaran.IAlbaranRepository,biz.rebel_wings.Repository.Albaran.IAlbaranesRepository,biz.rebel_wings.Repository.Albaran.ICatStatusAlbaranRepository,biz.fortia.Repository.RH.IRHTrabRepository,biz.bd2.Repository.Albaran.IAlbaranRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="albaranRepository"></param>
            <param name="albaranesRepository"></param>
            <param name="catStatusAlbaranRepository"></param>
            <param name="rhTrabRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            GET:
            Regresa lista de albaranes
            Usar por ahora estos ID s para hacer la consulta 539314253 o 539314252
            </summary>
            <param name="id">ID de Sucursal</param>
            <param name="pageNumber">Número de pagina</param>
            <param name="pageSize">Tamaño de pagina</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de albaran 
            </summary>
            <param name="id">ID de albaran a consultar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.Add(api.rebel_wings.Models.Albaran.AlbaranDto)">
            <summary>
            POST:
            Agregar un nuevo albaran
            </summary>
            <param name="albaranDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.Update(api.rebel_wings.Models.Albaran.AlbaranDto)">
            <summary>
            PUT:
            Actualizar un albaran
            </summary>
            <param name="albaranDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.AlbaranController.GetStatus">
            <summary>
            GET:
            Regresa el catalogo para Albaranes
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:api.rebel_wings.Controllers.AudioVideoController" -->
        <member name="M:api.rebel_wings.Controllers.AudioVideoController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.AudioVideo.IAudioVideoRepository,biz.rebel_wings.Repository.AudioVideo.IPhotoAudioVideoRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="audioVideoRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.AudioVideoController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Station
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:api.rebel_wings.Controllers.AudioVideoController.Get(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:api.rebel_wings.Controllers.AudioVideoController.Post(api.rebel_wings.Models.AudioVideo.AudioVideoDto)" -->
        <!-- Badly formed XML comment ignored for member "M:api.rebel_wings.Controllers.AudioVideoController.Put(api.rebel_wings.Models.AudioVideo.AudioVideoDto)" -->
        <member name="M:api.rebel_wings.Controllers.AudioVideoController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.BanosMatutinoController">
            <summary>
            Controlador para Baños Matutinos
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.BanosMatutinoController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.BanosMatutino.IBanosMatutinoRepository,biz.rebel_wings.Repository.BanosMatutino.IPhotoBanosMatutinoRepository)">
            <summary>
            Metodo Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="banosMatutinoRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.BanosMatutinoController.GetById(System.Int32)">
            <summary>
            Retorna el Baños Matutino por ID
            </summary>
            <param name="id">ID Baños</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BanosMatutinoController.Post(api.rebel_wings.Models.BanosMatutino.BanosMatutinoDto)">
            <summary>
            Agregar un nuevo Baños Matutino
            </summary>
            <remarks> 
            EXAMPLE :
            POST /BanosMatutino
            {
                "id": 0,
                "branch": 0,
                "photo": "string",
                "comment": "string",
                "createdBy": 0,
                "createdDate": "2021-10-22T17:42:10.356Z",
                "updatedBy": 0,
                "updatedDate": "2021-10-22T17:42:10.356Z",
                "photoBanosMatutinos": [
                {
                     "id": 0,
                     "banosMatutinoId": 0, // ID del Salón Montado 
                     "photoPath": "string", // Extensión de Foto
                     "photo": "string", // Base64 de la Foto
                     "createdBy": 0, 
                     "createdDate": "2021-10-22T18:25:53.959Z",
                     "updatedBy": 0, // Quien actualiza el registro 
                     "updatedDate": "2021-10-22T18:25:53.959Z" // Fecha de quien actualizo el registro,
                   }
                 ]
                }
            </remarks>
            <param name="banosMatutino">Objeto de Salón Montado</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>        
        </member>
        <member name="M:api.rebel_wings.Controllers.BanosMatutinoController.Put(api.rebel_wings.Models.BanosMatutino.BanosMatutinoDto)">
            <summary>
            Actualiza un Baños Matutino
            </summary>
            <remarks> 
            EXAMPLE :
            
            PUT /BanosMatutino
            {
                "id": 0,
                "branch": 0,
                "comment": "string",
                "createdBy": 0, // No Se Modifica se retorna tal cual se mando en el GET
                "createdDate": "2021-10-22T17:42:10.356Z", // No Se Modifica se retorna tal cual se mando en el GET
                "updatedBy": 0, // Quien actualiza el registro 
                "updatedDate": "2021-10-22T17:42:10.356Z" // Fecha de quien actualizo el registro,
                "photoBanosMatutinos": [
                {
                     "id": 0,
                     "banosMatutinoId": 0, // ID del Salón Montado 
                     "photoPath": "string", // Extensión de Foto
                     "photo": "string", // Base64 de la Foto
                     "createdBy": 0, 
                     "createdDate": "2021-10-22T18:25:53.959Z",
                     "updatedBy": 0, // Quien actualiza el registro 
                     "updatedDate": "2021-10-22T18:25:53.959Z" // Fecha de quien actualizo el registro,
                   }
                 ]
                }
            </remarks>
            <param name="banosMatutino">Objeto de Salón Montado</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.BanosMatutinoController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.BarCleaningController">
            <summary>
            Controller Bar Cleaning
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarCleaningController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.BarCleaning.IBarCleaningRepository,biz.rebel_wings.Repository.BarCleaning.IPhotoBarCleaningRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="barCleaningRepository"></param>
            <param name="photoBarCleaningRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarCleaningController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a Bar Cleaning By Branch
            </summary>
            <param name="id">ID => Branch </param>
            <param name="user">ID => Branch </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarCleaningController.Post(api.rebel_wings.Models.BarCleaning.BarCleaningDto)">
            <summary>
            POST:
            Add new Bar Cleaning
            </summary>
            <param name="barCleaningDto">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarCleaningController.Put(api.rebel_wings.Models.BarCleaning.BarCleaningDto)">
            <summary>
            PUT:
            Update a Bar Cleaning
            </summary>
            <param name="barCleaningDto">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarCleaningController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.BarController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Bar.IBarRepository,biz.rebel_wings.Repository.Bar.IPhotoBarRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="barRepository"></param>
            <param name="photoBarRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Barra 
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a Barra
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.Post(api.rebel_wings.Models.Bar.BarDto)">
            <summary>
            POST:
            Add new Barra
            </summary>
            <param name="barDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.Put(api.rebel_wings.Models.Bar.BarDto)">
            <summary>
            PUT:
            Update a Barra
            </summary>
            <param name="barDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BarController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.BathroomController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.#ctor(biz.rebel_wings.Repository.Bathroom.IBathroomRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Bathroom.IPhotoBathroomRepository)">
            <summary>
            Constructor
            </summary>
            <param name="bathroomRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="photoBathroomRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Salon 
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a Baños
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.Post(api.rebel_wings.Models.Bathroom.BathroomDto)">
            <summary>
            POST:
            Add new Baños
            </summary>
            <param name="bathroomDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.Put(api.rebel_wings.Models.Bathroom.BathroomDto)">
            <summary>
            PUT:
            Update a Baños
            </summary>
            <param name="bathroomDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathroomController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.BathRoomsOverallStatusController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathRoomsOverallStatusController.#ctor(biz.rebel_wings.Repository.BathRoomsOverallStatus.IBathRoomsOverallStatusRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.BathRoomsOverallStatus.IPhotoBathRoomsOverallStatusRepository)">
            <summary>
            Constructor
            </summary>
            <param name="bathRoomsOverallStatusRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathRoomsOverallStatusController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            </summary>
            <param name="id">ID de Sucursal</param>
            <param name="user">ID de Sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathRoomsOverallStatusController.Post(api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto)">
            <summary>
            POST:
            </summary>
            <param name="bathRoomsOverallStatusDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathRoomsOverallStatusController.Put(api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto)">
            <summary>
            UPDATE:
            Update a bathRooms Overall Status
            </summary>
            <param name="bathRoomsOverallStatusDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.BathRoomsOverallStatusController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.CashRegisterShortageController">
            <summary>
            Controlador de Volado de efectivo
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.CashRegisterShortageController.#ctor(biz.rebel_wings.Repository.CashRegisterShortage.ICashRegisterShortageRepository,biz.rebel_wings.Repository.CashRegisterShortage.IPhotoCashRegisterShortageRepository,biz.bd1.Repository.Tesoreria.ITesoreriaRepository,biz.bd2.Repository.Tesoreria.ITesoreriaRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Contructor
            </summary>
            <param name="cashRegisterShortageRepository"></param>
            <param name="photoCashRegisterShortageRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.CashRegisterShortageController.GetById(System.Int32)">
            <summary>
            GET:
            Obtiene por ID de Volado de efectivo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CashRegisterShortageController.Post(api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto)">
            <summary>
            POST:
            Agregar nuevo registro de Volado de efectivo
            </summary>
            <param name="cashRegisterShortage">Objeto de Volado de efectivo</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CashRegisterShortageController.Put(api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto)">
            <summary>
            PUT:
            Actualizar un Volado de efectivo
            </summary>
            <param name="cashRegisterShortage">Objeto de Volado de efectivo</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CashRegisterShortageController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.CheckTableController">
            <summary>
            Controller 
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.CheckTableController.#ctor(biz.rebel_wings.Repository.CheckTable.ICheckTableRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="checkTableRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.CheckTableController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a Revisión de Mesas
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CheckTableController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Entradas cargadas
            </summary>
            <param name="id">ID de Entradas cargadas</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CheckTableController.Post(api.rebel_wings.Models.CheckTable.CheckTableDto)">
            <summary>
            POST:
            Add new Revisión de Mesas
            </summary>
            <param name="checkTableDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CheckTableController.Put(api.rebel_wings.Models.CheckTable.CheckTableDto)">
            <summary>
            PUT:
            Update a Revisión de Mesas
            </summary>
            <param name="checkTableDto"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.CompleteProductsInOrderController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.#ctor(biz.rebel_wings.Repository.CompleteProductsInOrder.ICompleteProductsInOrderRepository,biz.rebel_wings.Repository.CompleteProductsInOrder.IPhotoCompleteProductsInOrderRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="completeProductsInOrderRepository"></param>
            <param name="photoCompleteProductsInOrderRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.GetById(System.Int32)">
            <summary>
            GET:
            Return a Complete product In Order By ID 
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.Get(System.Int32)">
            <summary>
            GET:
            Return By Branch
            </summary>
            <param name="id">Branch ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.Post(System.Collections.Generic.List{api.rebel_wings.Models.CompleteProductsInOrder.CompleteProductsInOrderDto})">
            <summary>
            POST:
            Add new Complete products in Order
            </summary>
            <param name="completeProductsInOrderDtos">New Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.Put(System.Collections.Generic.List{api.rebel_wings.Models.CompleteProductsInOrder.CompleteProductsInOrderDto})">
            <summary>
            PUT:
            Update a Complete Products In Order
            </summary>
            <param name="completeProductsInOrderDtos">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.CompleteProductsInOrderController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.ControlCenterController">
            <summary>
            COntrolador para Centro de Control
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.ControlCenterController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.ValidateAttendance.IValidateAttendanceRepository,biz.rebel_wings.Repository.SalesExpectations.IStockChickenRepository,biz.rebel_wings.Repository.ToSetTable.IToSetTableRepository,biz.rebel_wings.Repository.BanosMatutino.IBanosMatutinoRepository,biz.rebel_wings.Repository.ValidationGas.IValidationGasRepository,biz.rebel_wings.Repository.WaitlistTable.IWaitlistTableRepository,biz.rebel_wings.Repository.Tip.ITipRepository,biz.rebel_wings.Repository.TabletSafeKeeping.ITabletSafeKeepingRepository,biz.rebel_wings.Repository.Tip.ILivingRoomBathroomCleaningRepository,biz.rebel_wings.Repository.Alarm.IAlarmRepository,biz.rebel_wings.Repository.CashRegisterShortage.ICashRegisterShortageRepository,biz.rebel_wings.Repository.RiskProduct.IRiskProductRepository,biz.rebel_wings.Repository.Order.IOrderRepository,biz.rebel_wings.Repository.Fridge.IFridgeRepository,biz.rebel_wings.Repository.PrecookedChicken.IPrecookedChickenRepository,biz.rebel_wings.Repository.CompleteProductsInOrder.ICompleteProductsInOrderRepository,biz.rebel_wings.Repository.Fryer.IFryerCleaningRepository,biz.rebel_wings.Repository.PeopleCounting.IPeopleCountingRepository,biz.rebel_wings.Repository.SatisfactionSurvey.ISatisfactionSurveyRepository,biz.rebel_wings.Repository.GeneralCleaning.IGeneralCleaningRepository,biz.rebel_wings.Repository.Station.IStationRepository,biz.rebel_wings.Repository.Spotlight.ISpotlightRepository,biz.rebel_wings.Repository.DrinksTemperature.IDrinksTemperatureRepository,biz.rebel_wings.Repository.AudioVideo.IAudioVideoRepository,biz.rebel_wings.Repository.BarCleaning.IBarCleaningRepository,biz.rebel_wings.Repository.FridgeSalon.IFridgeSalonRepository,biz.rebel_wings.Repository.BathRoomsOverallStatus.IBathRoomsOverallStatusRepository,biz.rebel_wings.Repository.WashBasinWithSoapPaper.IWashBasinWithSoapPaperRepository,biz.rebel_wings.Repository.TicketTable.ITicketTableRepository,biz.rebel_wings.Repository.EntriesChargedAsDeliveryNote.IEntriesChargedAsDeliveryNoteRepository,biz.rebel_wings.Repository.OrderScheduleReview.IOrderScheduleReviewRepository,biz.rebel_wings.Repository.CheckTable.ICheckTableRepository,biz.rebel_wings.Repository.Kitchen.IKitchenRepository,biz.rebel_wings.Repository.Salon.ISalonRepository,biz.rebel_wings.Repository.Bathroom.IBathroomRepository,biz.rebel_wings.Repository.Bar.IBarRepository,biz.rebel_wings.Repository.RequestTransfer.IRequestTransferRepository,biz.rebel_wings.Repository.Albaran.IAlbaranesRepository,biz.rebel_wings.Repository.SalesExpectations.IStockChickenByBranchRepository,biz.rebel_wings.Repository.GeneralCleaning.IPhotoGeneralCleaningRepository,biz.rebel_wings.Repository.DrinksTemperature.IPhotoDrinksTemperatureRepository,biz.rebel_wings.Repository.Spotlight.IPhotoSpotlightRepository,biz.rebel_wings.Repository.BathRoomsOverallStatus.IPhotoWashBasinWithSoapPaperRepository,biz.rebel_wings.Repository.TicketTable.IPhotoTicketTableRepository,biz.rebel_wings.Repository.Kitchen.IPhotoKitchenRepository,biz.rebel_wings.Repository.Salon.IPhotoSalonRepository,biz.rebel_wings.Repository.Bathroom.IPhotoBathroomRepository,biz.rebel_wings.Repository.Bar.IPhotoBarRepository,biz.rebel_wings.Repository.ToSetTable.IPhotoToSetTableRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="validateAttendanceRepository"></param>
            <param name="salesExpectationRepository"></param>
            <param name="toSetTableRepository"></param>
            <param name="banosMatutinoRepository"></param>
            <param name="validationGasRepository"></param>
            <param name="waitlistTableRepository"></param>
            <param name="tipRepository"></param>
            <param name="tabletSafeKeepingRepository"></param>
            <param name="livingRoomBathroomCleaningRepository"></param>
            <param name="alarmRepository"></param>
            <param name="cashRegisterShortageRepository"></param>
            <param name="riskProductRepository"></param>
            <param name="orderRepository"></param>
            <param name="fridgeRepository"></param>
            <param name="precookedChickenRepository"></param>
            <param name="completeProductsInOrderRepository"></param>
            <param name="fryerCleaningRepository"></param>
            <param name="peopleCountingRepository"></param>
            <param name="satisfactionSurveyRepository"></param>
            <param name="generalCleaningRepository"></param>
            <param name="stationRepository"></param>
            <param name="spotlightRepository"></param>
            <param name="drinksTemperatureRepository"></param>
            <param name="audioVideoRepository"></param>
            <param name="barCleaningRepository"></param>
            <param name="fridgeSalonRepository"></param>
            <param name="bathRoomsOverallStatusRepository"></param>
            <param name="washBasinWithSoapPaperRepository"></param>
            <param name="ticketTableRepository"></param>
            <param name="entriesChargedAsDeliveryNoteRepository"></param>
            <param name="orderScheduleReviewRepository"></param>
            <param name="checkTableRepository"></param>
            <param name="kitchenRepository"></param>
            <param name="salonRepository"></param>
            <param name="bathroomRepository"></param>
            <param name="barRepository"></param>
            <param name="requestTransferRepository"></param>
            <param name="albaranesRepository"></param>
            <param name="stockChickenByBranchRepository"></param>
            <param name="photoGeneralCleaningRepository"></param>
            <param name="photoDrinksTemperatureRepository"></param>
            <param name="photoSpotlightRepository"></param>
            <param name="photoWashBasinWithSoapPaperRepository"></param>
            <param name="photoTicketTableRepository"></param>
            <param name="photoKitchenRepository"></param>
            <param name="photoSalonRepository"></param>
            <param name="photoBathroomRepository"></param>
            <param name="photoBarRepository"></param>
            <param name="photoToSetTableRepository"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:api.rebel_wings.Controllers.ControlCenterController.Get(System.Int32,System.Int32,System.Int32,System.Int32)" -->
        <member name="M:api.rebel_wings.Controllers.ControlCenterController.GetRegional(System.Int32,System.Int32,System.Int32)">
            <summary>
            GET:
            Regresa lista para Menu de Regional
            </summary>
            <param name="branch">ID => Sucursal</param>
            <param name="menu">Posición de menú</param>
            <param name="user">Posición de menú</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.DashboardController">
            <summary>
            Controller to Dashboard
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.DashboardController.#ctor(biz.rebel_wings.Services.Logger.ILoggerManager,AutoMapper.IMapper,biz.rebel_wings.Repository.Dashboard.IDashboardRepository,biz.fortia.Repository.RH.IRHTrabRepository)">
            <summary>
            Constructor
            </summary>
            <param name="dashboardRepository"></param>
            <param name="iRhTrabRepository"></param>
            <param name="logger"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.DashboardController.GetAdmin(System.DateTime)">
            <summary>
            GET:
            Return info to admin page
            </summary>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DashboardController.GetSupervisor(System.Int32,System.DateTime)">
            <summary>
            GET:
            Supervisor
            </summary>
            <param name="id">Branch ID</param>
            <param name="dateTime">Date</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DashboardController.GetRegionals(System.Int32,System.DateTime)">
            <summary>
            GET:
            Regional
            </summary>
            <param name="id"></param>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DashboardController.GetAssistance(System.Int32,System.DateTime)">
            <summary>
            GET:
            Asistencias
            </summary>
            <param name="id"></param>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.DrinksTemperatureController">
            <summary>
            Controlador de temperatura de bebidas
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.DrinksTemperature.IDrinksTemperatureRepository,biz.rebel_wings.Repository.DrinksTemperature.IPhotoDrinksTemperatureRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="drinksTemperatureRepository"></param>
            <param name="photoDrinksTemperatureRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Regresa lista de Temperatura de bebidas
            </summary>
            <param name="id">ID de sucursal</param>
            <param name="user">ID de sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.GetById(System.Int32)">
            <summary>
            GET:
            By ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.Post(System.Collections.Generic.List{api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto})">
            <summary>
            POST:
            Agregar una lista de bebidas de temperartura 
            </summary>
            <param name="drinksTemperatureDtos"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.Put(System.Collections.Generic.List{api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto})">
            <summary>
            PUT:
            Actualiza una lista de  Temperatura de bebidas
            </summary>
            <param name="drinksTemperatureDtos"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.DrinksTemperatureController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController">
            <summary>
            Controller de Entradas cargadas como albarán 
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.#ctor(biz.rebel_wings.Repository.EntriesChargedAsDeliveryNote.IEntriesChargedAsDeliveryNoteRepository,biz.rebel_wings.Repository.EntriesChargedAsDeliveryNote.IPhotoEntriesChargedAsDeliveryNoteRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="entriesChargedAsDeliveryNoteRepository"></param>
            <param name="photoEntriesChargedAsDeliveryNoteRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.Get(System.Int32)">
            <summary>
            GET:
            Regresa Entradas cargadas como albarán del día
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Entradas cargadas
            </summary>
            <param name="id">ID de Entradas cargadas</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.Post(api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto)">
            <summary>
            POST:
            Add new Entradas cargadas como albarán del día
            </summary>
            <param name="entriesChargedAsDeliveryNoteDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.Put(api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto)">
            <summary>
            PUT:
            Update Entradas cargadas como albarán del día
            </summary>
            <param name="entriesChargedAsDeliveryNoteDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.EntriesChargedAsDeliveryNoteController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a PHOTO Entradas cargadas como albarán del día
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.FridgeController">
            <summary>
            Controlador de Refrigeradores
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.#ctor(biz.rebel_wings.Repository.Fridge.IFridgeRepository,biz.rebel_wings.Repository.Fridge.IPhotoFridgeRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Contructor
            </summary>
            <param name="fridgeRepository"></param>
            <param name="photoFridgeRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            regresa lista de refiregeradores
            </summary>
            <param name="id">ID ==> Sucursal ID</param>
            <param name="user">ID ==> Sucursal ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.GetById(System.Int32)">
            <summary>
            GET:
            Return  by ID
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.Post(System.Collections.Generic.List{api.rebel_wings.Models.Fridge.FridgeDto})">
            <summary>
            POST:
            Lista de refrigeradores a agregar
            </summary>
            <param name="fridgeDtos">Lista de refrigeradores</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.Put(System.Collections.Generic.List{api.rebel_wings.Models.Fridge.FridgeDto})">
            <summary>
            PUT:
            Lista de refrigeradores a actualizar
            </summary>
            <param name="fridgeDtos">Lista de refrigeradores</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.FridgeSalonController">
            <summary>
            Fridge Salon Controller 
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.FridgeSalon.IFridgeSalonRepository,biz.rebel_wings.Repository.FridgeSalon.IPhotoFridgeSalonRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="fridgeSalonRepository"></param>
            <param name="photoFridgeSalonRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.Get(System.Int32,System.Int32)">
            <summary>
            GET: Return a Fridge Salon By Branch
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.GetById(System.Int32)">
            <summary>
            GET:
            Return By Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.Post(System.Collections.Generic.List{api.rebel_wings.Models.FridgeSalon.FridgeSalonDto})">
            <summary>
            POST: Add new Fridge Salon
            </summary>
            <param name="fridgeSalonDto">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.Put(System.Collections.Generic.List{api.rebel_wings.Models.FridgeSalon.FridgeSalonDto})">
            <summary>
            PUT: Update a Fridge Salon
            </summary>
            <param name="fridgeSalonDto">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FridgeSalonController.Delete(System.Int32)">
            <summary>
            GET:
            Remove a Photo
            </summary>
            <param name="id">ID => Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.FryerController">
            <summary>
            Controlador de Freidoras
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.FryerController.#ctor(biz.rebel_wings.Services.Logger.ILoggerManager,AutoMapper.IMapper,biz.rebel_wings.Repository.Fryer.IFryerCleaningRepository,biz.rebel_wings.Repository.Fryer.IPhotoFryerCleaningRepository)">
            <summary>
            Constructor
            </summary>
            <param name="loggerManager"></param>
            <param name="mapper"></param>
            <param name="fryerCleaningRepository"></param>
            <param name="photoFryerCleaningRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.FryerController.GetById(System.Int32)">
            <summary>
            GET:
            Return a Fryer By ID 
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FryerController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a list fryer cleaning By Branch
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FryerController.Put(System.Collections.Generic.List{api.rebel_wings.Models.FryerCleaning.FryerCleaningDto})">
            <summary>
            PUT:
            Update a List of fryer cleaning 
            </summary>
            <param name="fryerCleaningDtos"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.FryerController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.GeneralCleaningController">
            <summary>
            General Cleaning Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.GeneralCleaningController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.GeneralCleaning.IGeneralCleaningRepository,biz.rebel_wings.Repository.GeneralCleaning.IPhotoGeneralCleaningRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="generalCleaningRepository"></param>
            <param name="photoGeneralCleaningRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.GeneralCleaningController.Get(System.Int32,System.Int32)">
            <summary>
            GET
            </summary>
            <param name="id">ID de Sucursal</param>
            <param name="user">ID de Sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.GeneralCleaningController.GetById(System.Int32)">
            <summary>
            GET:
            Return By Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.GeneralCleaningController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.InventarioController.#ctor(biz.rebel_wings.Repository.Inventario.IInventarioRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="inventarioRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.InventarioController.Post(api.rebel_wings.Models.Inventario.InventarioDto)">
            <summary>
            POST:
            Add new Revisión de Mesas
            </summary>
            <param name="inventarioDto"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.ItemsController">
            <summary>
            Controlador para Articulos de tienda
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.ItemsController.#ctor(biz.bd1.Repository.Articulos.IArticulosRespository,biz.bd2.Repository.Articulos.IArticulosRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="articulosRespositoryBD1"></param>
            <param name="articulosRespositoryBD2"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.ItemsController.Get(System.Int32,System.String)">
            <summary>
             LISTA de Articulos
            </summary>
            <param name="id">ID de Sucursal</param>
            <param name="word">Palabra CLAVE para la busqueda</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.KitchenController">
            <summary>
            COntroller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.KitchenController.#ctor(biz.rebel_wings.Repository.Kitchen.IKitchenRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Kitchen.IPhotoKitchenRepository)">
            <summary>
            Constructor
            </summary>
            <param name="kitchenRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="photoKitchenRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.KitchenController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de albaran 
            </summary>
            <param name="id">ID de albaran a consultar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.KitchenController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController">
            <summary>
            Controlador de LIMPIEZA DE SALÓN Y BAÑOS
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Tip.ILivingRoomBathroomCleaningRepository,biz.rebel_wings.Repository.Tip.IPhotoLivingRoomBathroomCleaningRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="livingRoomBathroomCleaningRepository"></param>
            <param name="photoLivingRoomBathroomCleaningRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID
            </summary>
            <param name="id">ID de </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController.Post(api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto)">
            <summary>
            POST:
            Agregar una nueva LIMPIEZA DE SALÓN Y BAÑOS
            </summary>
            <param name="livingRoomBathroomCleaningDto">Objeto de LIMPIEZA DE SALÓN Y BAÑOS</param>
            <returns></returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>   
        </member>
        <member name="M:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController.Put(api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto)">
            <summary>
            PUT:
            Actualizar LIMPIEZA DE SALÓN Y BAÑOS
            </summary>
            <param name="livingRoomBathroomCleaningDto">Objeto de LIMPIEZA DE SALÓN Y BAÑOS</param>
            <returns></returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>   
        </member>
        <member name="M:api.rebel_wings.Controllers.LivingRoomBathroomCleaningController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a list of Orders
            </summary>
            <param name="id">ID ==> Sucursal ID</param>
            <param name="user">ID ==> Sucursal ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderController.Post(System.Collections.Generic.List{api.rebel_wings.Models.Order.OrderDto})">
            <summary>
            POST:
            Agrega lista de ordenes 
            </summary>
            <param name="orderDto">Lista de Ordenes a agregar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderController.Put(System.Collections.Generic.List{api.rebel_wings.Models.Order.OrderDto})">
            <summary>
            PUT:
            Update or Add new Order
            </summary>
            <param name="orderDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderScheduleReviewController.Get(System.Int32)">
            <summary>
            GET:
            Return a Revisión de Pedido vs calendario
            </summary>
            <param name="id">Sucursal ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderScheduleReviewController.GetById(System.Int32)">
            <summary>
            GET:
            Return By Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderScheduleReviewController.Post(api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto)">
            <summary>
            POST:
            Add mew Revisión de Pedido vs calendario
            </summary>
            <param name="orderScheduleReviewDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderScheduleReviewController.Put(api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto)">
            <summary>
            PUT:
            Update a Revisión de Pedido vs calendario
            </summary>
            <param name="orderScheduleReviewDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.OrderScheduleReviewController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a PHOTO Revisión de Pedido vs calendario
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.PeopleCountingController">
            <summary>
            Conteo de Personas
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.#ctor(biz.rebel_wings.Repository.PeopleCounting.IPeopleCountingRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.PeopleCounting.IPhotoPeopleCountingRepository)">
            <summary>
            Constructor
            </summary>
            <param name="peopleCountingRepository"></param>
            <param name="photopPeopleCountingRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a list of Orders
            </summary>
            <param name="id">ID ==> Sucursal ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.GetById(System.Int32)">
            <summary>
            GET:
            Return by ID
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.Post(api.rebel_wings.Models.PeopleCounting.PeopleCountingDto)">
            <summary>
            POST:
            Add new Bar Cleaning
            </summary>
            <param name="peopleCountingDto">Object</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.Put(api.rebel_wings.Models.PeopleCounting.PeopleCountingDto)">
            <summary>
            PUT:
            Update or Add new Order
            </summary>
            <param name="peopleDtos"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PeopleCountingController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.PrecookedChickenController">
            <summary>
            Controlador de Pollo Precocido
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.PrecookedChickenController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Regresa objeto de Pollo precosido
            </summary>
            <param name="id">ID de Sucursal</param>
            <param name="user">ID de Sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PrecookedChickenController.GetById(System.Int32)">
            <summary>
            GET:
            Return By ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PrecookedChickenController.Post(api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto)">
            <summary>
            POST:
            Add new Precooked Chicken
            </summary>
            <param name="precookedChickenDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PrecookedChickenController.Put(api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto)">
            <summary>
            PUT:
            Update Precooked Chicken
            </summary>
            <param name="precookedChickenDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.PrecookedChickenController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.RemisionController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.RemisionController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.bd1.Repository.Remision.IRemisionRepository,biz.bd2.Repository.Remision.IRemisionRepository,biz.bd2.Repository.PedidoEntrega.ITEstatusPedidosEntregaRepository,biz.bd1.Repository.PedidoEntrega.ITEstatusPedidosEntregaRepository,biz.bd2.Repository.PedidoEntrega.ITPedidosEntregaRepository,biz.bd1.Repository.PedidoEntrega.ITPedidosEntregaRepository,biz.fortia.Repository.RH.IRHTrabRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="remisionBd1Repository"></param>
            <param name="remisionBd2Repository"></param>
            <param name="rhTrabRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.RemisionController.Put(api.rebel_wings.Models.Remisiones.TPedidoEntregaUpadteDto,System.String)">
            <summary>
            Actualiza un registro de Pedido/Entrega
            </summary>
            <returns>Regresa registro actualizado</returns>
            <returns>Retorna un nuevo objeto de Pedido/Entrega</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.RemisionController.create_status_db1(api.rebel_wings.Models.Remisiones.TEstatusPedidosEntregaDto)">
            <summary>
            Agregar un nuevo estatus para entregas/pedidos
            </summary>
            <param name="Create Estatus Pedido/EntregaEstatusPedido/Entrega"></param>
            <returns>Retorna un nuevo objeto de Pedido/Entrega</returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="T:api.rebel_wings.Controllers.RiskProductController">
            <summary>
            Controlador de Producto en Riesgo
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.RiskProductController.#ctor(biz.rebel_wings.Repository.RiskProduct.IRiskProductRepository,biz.bd2.Repository.Articulos.IArticulosRepository,biz.bd1.Repository.Articulos.IArticulosRespository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="riskProductRepository"></param>
            <param name="articulosRespositoryBd2"></param>
            <param name="articulosRespositoryBd1"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.RiskProductController.GetByBranchId(System.Int32)">
            <summary>
            GET:
            Obtiene por ID de sucursal de los Productos en Riesgo
            </summary>
            <param name="id">Sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.RiskProductController.GetById(System.Int32)">
            <summary>
            GET:
            Obtiene por ID de Producto en Riesgo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.RiskProductController.Post(System.Collections.Generic.List{api.rebel_wings.Models.RiskProduct.RiskProductDto})">
            <summary>
            POST:
            Agregar nuevo registro Producto en Riesgo
            </summary>
            <param name="riskProduct">Objeto de Producto en Riesgo</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.RiskProductController.Put(System.Collections.Generic.List{api.rebel_wings.Models.RiskProduct.RiskProductDto})">
            <summary>
            PUT:
            Actualizar Producto en Riesgo
            </summary>
            <param name="productDto"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.SalonController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.#ctor(biz.rebel_wings.Repository.Salon.ISalonRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Salon.IPhotoSalonRepository)">
            <summary>
            Constructor
            </summary>
            <param name="salonRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="photoSalonRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Salon 
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.Get(System.Int32)">
            <summary>
            GET:
            Return a Salon
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.Post(api.rebel_wings.Models.Salon.SalonDto)">
            <summary>
            POST:
            Add new Salon
            </summary>
            <param name="salonDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.Put(api.rebel_wings.Models.Salon.SalonDto)">
            <summary>
            PUT:
            Update a Salon
            </summary>
            <param name="salonDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SalonController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SatisfactionSurveyController.#ctor(biz.rebel_wings.Repository.SatisfactionSurvey.ISatisfactionSurveyRepository,biz.rebel_wings.Repository.SatisfactionSurvey.IPhotoSatisfactionSurveyRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="satisfactionSurveyRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.SatisfactionSurveyController.GetById(System.Int32)">
            <summary>
            GET:
            Return a Satisfaction Survey By ID 
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SatisfactionSurveyController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.SpotlightController">
            <summary>
            Controlador de Focos
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Spotlight.ISpotlightRepository,biz.rebel_wings.Repository.Spotlight.IPhotoSpotlightRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="spotlightRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Return a list of Spotlights
            </summary>
            <param name="id">ID ==> Sucursal ID</param>
            <param name="user">ID ==> Sucursal ID</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.GetById(System.Int32)">
            <summary>
            GET:
            Return By Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.Post(api.rebel_wings.Models.Spotlight.SpotlightDto)">
            <summary>
            POST:
            Un nuevo Foco
            </summary>
            <param name="spotlightDto">Foco a agregar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.Put(api.rebel_wings.Models.Spotlight.SpotlightDto)">
            <summary>
            PUT:
            Update or Add new Spotlight
            </summary>
            <param name="spotlightDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.SpotlightController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo
            </summary>
            <param name="id">ID ==> Photo</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.StationController">
            <summary>
            Controlador de Estación
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.Station.IStationRepository,biz.rebel_wings.Repository.Station.IPhotoStationRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="stationRepository"></param>
            <param name="photoStationRepositor"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Station
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.Post(api.rebel_wings.Models.Station.StationDto)">
            <summary>
            POST:
            </summary>
            <param name="stationDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.Put(api.rebel_wings.Models.Station.StationDto)">
            <summary>
            PUT:
            </summary>
            <param name="stationDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StationController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove Photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.StockChickenController">
            <summary>
            Controlados para Expectativas de Ventas
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.#ctor(biz.rebel_wings.Repository.CatStatusSalesExpectations.ICatStatusStockChickenRepository,biz.rebel_wings.Repository.SalesExpectations.IStockChickenRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.SalesExpectations.IStockChickeUsedRepository,biz.rebel_wings.Repository.SalesExpectations.IStockChickenByBranchRepository,biz.fortia.Repository.RH.IRHTrabRepository,biz.bd1.Repository.Sucursal.ISucursalRepository,biz.bd2.Repository.Sucursal.ISucursalRepository,biz.bd1.Repository.Stock.IStockRepository,biz.bd2.Repository.Stock.IStockRepository)">
            <summary>
            Contructor
            </summary>
            <param name="catStatusSalesExpectationRepository"></param>
            <param name="salesExpectationRepository"></param>
            <param name="stockChickeUsedRepository"></param>
            <param name="stockChickenByBranchRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="iRhTrabRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.GetById(System.Int32)">
            <summary>
            GET para retornar por ID Expectativa de Venta
            </summary>
            <param name="id">ID del registro que se quiere retornar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.GetStock(System.Int32,System.String)">
            <summary>
            GET para retornar catálogo de articulos para stock de pollo
            </summary>
            <param name="dataBase">dataBase base de datos que se obtiene de login</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.ValidateStock(System.Int32,System.String,System.Decimal,System.Int32)">
            <summary>
            GET para validar stock de pollo con la base ICG
            </summary>
            <param name="id_sucursal">ID del sucursal que se obtiene de login</param>
            <param name="dataBase">dataBase base de datos que se obtiene de login</param>
            <param name="cantidad">cantidad de stock de pollo a ingresar al sistema</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.AddRegularizate(System.Int32,System.String,System.Int32,System.String)">
            <summary>
            POST Para actualizar Stock y hacer regularizacion en ICG
            </summary>
            <param name="dataBase">dataBase base de datos que se obtiene de login</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.GetByBranch(System.Int32)">
            <summary>
            Retorno de lista de Stock de Pollo por Día y por Sucursal
            </summary>
            <param name="id">ID de Sucursal</param>
            <returns>Lista de Stock de Pollos</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.Post(api.rebel_wings.Models.SalesExpectations.StockChickenDto)">
            <summary>
            Agregar un nuevo stock de Pollo
            </summary>
            <param name="stockChicken"></param>
            <returns>Retorna un nuevo objeto de StockChicken</returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.Put(api.rebel_wings.Models.SalesExpectations.StockChickenDto)">
            <summary>
            Actualiza un registro de Stock de Pollo
            </summary>
            <param name="stockChicken"> Objeto de Stock Chicken</param>
            <returns>Regresa registro actualizado</returns>
            <returns>Retorna un nuevo objeto de StockChicken</returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.Delete(System.Int32)">
            <summary>
            Eliminar un Stock de Pollo
            </summary>
            <param name="id">ID de Stock de Pollo a eliminar</param>
            <returns>Regresa objeto eliminado</returns>
            <response code="200">Regresa respuesta exitosa de objeto elimanado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="404">No existe registro</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.PackageUsed(api.rebel_wings.Models.SalesExpectations.PackageUsed)">
            <summary>
            Agregar uso de paquetes de pollos usados
            </summary>
            <param name="packageUsed">Objeto que se recive para agregar un nuevo registro de paquete usado</param>
            <returns></returns>
            <response code="200">Regresa respuesta exitosa de objeto elimanado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="404">No existe registro</response>
            <response code="406">No existe registro</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.PostAdmin(api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto)">
            <summary>
            POST:
            Agregar un Stock de Pollo para Admin
            </summary>
            <param name="stockChickenByBranchDto">Objeto de Petición</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.PutAdmin(api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto)">
            <summary>
            PUT:
            Actualizar un Stock de pollo para Admin
            </summary>
            <param name="stockChickenByBranchDto">Objeto a actualizar</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.GetAdminByBranch(System.Int32)">
            <summary>
            GET:
            Regresa Objeto de Stock de pollo para Admin por ID
            </summary>
            <param name="id">ID de registro de Stock de pollo</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.StockChickenController.GetAdminListByBranch(System.String)">
            <summary>
            GET:
            Regresa lista de Sucursales de Stock de pollo
            </summary>
            <returns>Lista de Sucursales de Stock de Pollo</returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TabletSafeKeepingController">
            <summary>
            Controlador de Resguardo de Tableta
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TabletSafeKeepingController.#ctor(biz.rebel_wings.Repository.TabletSafeKeeping.ITabletSafeKeepingRepository,biz.rebel_wings.Repository.Alarm.IPhotoTabletSafeKeepingRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="tabletSafeKeepingRepository"></param>
            <param name="photoTabletSafeKeepingRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TabletSafeKeepingController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID
            </summary>
            <param name="id">ID de </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TabletSafeKeepingController.Post(api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto)">
            <summary>
            POST:
            Agregar una nueva Resguardo de Tableta
            </summary>
            <param name="tabletSafeKeeping">Objeto de Resguardo de Tableta</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TabletSafeKeepingController.Put(api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto)">
            <summary>
            PUT:
            Actualizar la Resguardo de Tableta
            </summary>
            <param name="tabletSafeKeeping">Objeto de Resguardo de Tableta</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TabletSafeKeepingController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.#ctor(biz.rebel_wings.Repository.Task.ITaskRepository,biz.rebel_wings.Repository.Task.ITaskBranchRepository,biz.fortia.Repository.RH.IRHTrabRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.bd1.Repository.Sucursal.ISucursalRepository,biz.bd2.Repository.Sucursal.ISucursalRepository)">
            <summary>
            Constructor
            </summary>
            <param name="taskRepository"></param>
            <param name="taskBranchRepository"></param>
            <param name="rhTrabRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.GetMaintenances(System.Int32,System.String)">
            <summary>
            GET:
            Regresa lista de Tareas por Turno
            </summary>
            <param name="workshift">ID de turno</param>
            <returns>Regresa lista de TaskList </returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.GetAssignedTo">
            <summary>
            GET:
            Regresa catalogo de 'asinado a'
            </summary>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.GetWorkShift">
            <summary>
            GET:
            Regresa catalogo de 'turno'
            </summary>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.GetTypeField">
            <summary>
            GET:
            Regresa catalogo de 'tipo de campos'
            </summary>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.Add(api.rebel_wings.Models.Task.TaskDto)">
            <summary>
            POST:
            Agregar una nueva tarea
            </summary>
            <param name="taskDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TaskController.Update(api.rebel_wings.Models.Task.TaskDto)">
            <summary>
            PUT:
            Actualizar una tarea
            </summary>
            <param name="taskDto"></param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TicketController">
            <summary>
            Controlador para Ticket
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.GetById(System.Int32)">
            <summary>
            GET:
            Regresa Ticket por ID
            </summary>
            <param name="id">ID de Ticket</param>
            <returns>Rergresa objeto de Ticket</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.Post(api.rebel_wings.Models.Ticket.TicketDto)">
            <summary>
            POST:
            Agregar un nuevo Ticket
            </summary>
            <param name="ticketDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.Put(api.rebel_wings.Models.Ticket.TicketDto)">
            <summary>
            PUT:
            Actualiza registro de Ticket
            </summary>
            <param name="ticketDto">Objeto de Ticket a actualizar</param>
            <returns>Regreas objeto actualizado</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.PutAdmin(System.Int32,System.Int32,System.Int32)">
            <summary>
            PUT:
            Actualiza estatus de un Ticket
            </summary>
            <param name="id">ID de Ticket</param>
            <param name="status">ID de Estatus</param>
            <param name="user">ID de Usuario que realiza la acción</param>
            <returns>Regresa objeto actualizado</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.GetMaintenances">
            <summary>
            GET:
            Regresa lista para Mantenimiento en Modulo de Administración
            </summary>
            <returns>Regresa una lista de Maintenance</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.GetPartBranch">
            <summary>
            GET:
            Catalogo de ¿En qué parte de la sucursal te encuentras?
            </summary>
            <returns>Regresa lista de ¿En qué parte de la sucursal te encuentras?</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.GetSpecificSection(System.Int32)">
            <summary>
            GET:
            Catalogo de lugar específico
            </summary>
            <param name="id">ID de que parte de la Sucursal</param>
            <returns>Regresa lista de que parte de la Sucursal</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketController.GetStatus">
            <summary>
            GET:
            Catalogo de Estatus
            </summary>
            <returns>Regresa lista de Estatus</returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TicketingController">
            <summary>
            Controller 
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.#ctor(biz.rebel_wings.Repository.Ticketing.ITicketingRepository,biz.rebel_wings.Repository.Ticketing.IPhotoTicketingRepository,biz.rebel_wings.Repository.Ticketing.ICommentTicketingRepository,biz.rebel_wings.Repository.Ticketing.ICatTicketingRepository,biz.rebel_wings.Repository.Ticketing.ICatBranchLocateRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.fortia.Repository.RH.IRHTrabRepository,biz.bd1.Repository.Sucursal.ISucursalRepository,biz.bd2.Repository.Sucursal.ISucursalRepository)">
            <summary>
            Constructor
            </summary>
            <param name="ticketingRepository"></param>
            <param name="photoTicketingRepository"></param>
            <param name="commentTicketingRepository"></param>
            <param name="catTicketingRepository"></param>
            <param name="catBranchLocateRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="rhTrabRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.Post(api.rebel_wings.Models.Ticketing.TicketingDto)">
            <summary>
            POST:
            Add new Ticket
            </summary>
            <param name="ticketingDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.Put(api.rebel_wings.Models.Ticketing.TicketingDto)">
            <summary>
            PUT:
            Update record
            </summary>
            <param name="ticketingDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.Delete(System.Int32)">
            <summary>
            DELETE:
            remove photo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.AddComment(System.String,System.Int32,System.Int32)">
            <summary>
            POST:
            Add new comment 
            </summary>
            <param name="comment">String</param>
            <param name="id">ID => Ticket</param>
            <param name="user">ID => from user</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.UpdateStatus(api.rebel_wings.Models.Ticketing.TicketingStatus,System.Int32)">
            <summary>
            UPDATE:
            update status
            </summary>
            <param name="ticketingStatus"></param>
            <param name="id">ID => Ticket</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.Get(System.Int32)">
            <summary>
            GET:
            
            </summary>
            <param name="id">ID de Ticket</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.GetHistory(System.Int32[])">
            <summary>
            GET:
            </summary>
            <param name="ids">ID's Sucursales</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.GetHistories(System.Int32[],System.DateTime,System.DateTime)">
            <summary>
            GET:
            Return History by Date and Branches 
            </summary>
            <param name="ids">ID's Sucursales</param>
            <param name="startDate">Date start</param>
            <param name="endDate">Date end</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.GetCategories">
            <summary>
            GET:
            Catalogue of Categories
            </summary>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketingController.GetBranchLocate">
            <summary>
            GET:
            Catalogue of Branch locater
            </summary>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TicketTableController">
            <summary>
            Controller
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.#ctor(biz.rebel_wings.Repository.TicketTable.ITicketTableRepository,biz.rebel_wings.Repository.TicketTable.IPhotoTicketTableRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="ticketTableRepository"></param>
            <param name="photoTicketTableRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Regresa Ticket y Mesa del día
            </summary>
            <param name="id">Sucursal</param>
            <param name="user">Sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.GetById(System.Int32)">
            <summary>
            GET:
            Return By Id
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.Post(api.rebel_wings.Models.TicketTable.TicketTableDto)">
            <summary>
            POST:
            Add new Ticket y mesa
            </summary>
            <param name="ticketTableDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.Put(api.rebel_wings.Models.TicketTable.TicketTableDto)">
            <summary>
            PUT:
            Update record Ticket Table
            </summary>
            <param name="ticketTableDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TicketTableController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo Ticket Mesa
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TipController">
            <summary>
            Controlador de RESGUARDO DE PROPINA
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TipController.#ctor(biz.rebel_wings.Repository.Tip.ITipRepository,biz.rebel_wings.Repository.Tip.IPhotoTipRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="tipRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TipController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID
            </summary>
            <param name="id">ID de </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TipController.Post(api.rebel_wings.Models.Tip.TipDto)">
            <summary>
            POST:
            Agregar una nueva RESGUARDO DE PROPINA
            </summary>
            <param name="tip">Objeto de RESGUARDO DE PROPINA</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TipController.Put(api.rebel_wings.Models.Tip.TipDto)">
            <summary>
            PUT:
            Actualizar la RESGUARDO DE PROPINA
            </summary>
            <param name="tip">Objeto de RESGUARDO DE PROPINA</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.TipController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.ToSetTableController">
            <summary>
            Controlador para Salón Montado
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.ToSetTableController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.ToSetTable.IToSetTableRepository,biz.rebel_wings.Repository.ToSetTable.IPhotoToSetTableRepository)">
            <summary>
            Metodo Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="toSetTableRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.ToSetTableController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Station
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:api.rebel_wings.Controllers.ToSetTableController.Get(System.Int32,System.Int32)" -->
        <member name="M:api.rebel_wings.Controllers.ToSetTableController.Post(api.rebel_wings.Models.ToSetTable.ToSetTableDto)">
            <summary>
            Agregar un nuevo Salón Montado
            </summary>
            <remarks> 
            EXAMPLE :
            POST /ToSetTable
            {
                "id": 0,
                "branch": 0,
                "photo": "string",
                "comment": "string",
                "createdBy": 0,
                "createdDate": "2021-10-22T17:42:10.356Z",
                "updatedBy": 0,
                "updatedDate": "2021-10-22T17:42:10.356Z",
                "photoToSetTables": [
                {
                     "id": 0,
                     "toSetTableId": 0, // ID del Salón Montado 
                     "photoPath": "string", // Extensión de Foto
                     "photo": "string", // Base64 de la Foto
                     "createdBy": 0, 
                     "createdDate": "2021-10-22T18:25:53.959Z",
                     "updatedBy": 0, // Quien actualiza el registro 
                     "updatedDate": "2021-10-22T18:25:53.959Z" // Fecha de quien actualizo el registro,
                   }
                 ]
                }
            </remarks>
            <param name="toSetTable">Objeto de Salón Montado</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>        
        </member>
        <member name="M:api.rebel_wings.Controllers.ToSetTableController.Put(api.rebel_wings.Models.ToSetTable.ToSetTableDto)">
            <summary>
            Actualiza un Salón Montado
            </summary>
            <remarks> 
            EXAMPLE :
            
            PUT /ToSetTable
            {
                "id": 0,
                "branch": 0,
                "comment": "string",
                "createdBy": 0, // No Se Modifica se retorna tal cual se mando en el GET
                "createdDate": "2021-10-22T17:42:10.356Z", // No Se Modifica se retorna tal cual se mando en el GET
                "updatedBy": 0, // Quien actualiza el registro 
                "updatedDate": "2021-10-22T17:42:10.356Z" // Fecha de quien actualizo el registro,
                "photoToSetTables": [
                {
                     "id": 0,
                     "toSetTableId": 0, // ID del Salón Montado 
                     "photoPath": "string", // Extensión de Foto
                     "photo": "string", // Base64 de la Foto
                     "createdBy": 0, 
                     "createdDate": "2021-10-22T18:25:53.959Z",
                     "updatedBy": 0, // Quien actualiza el registro 
                     "updatedDate": "2021-10-22T18:25:53.959Z" // Fecha de quien actualizo el registro,
                   }
                 ]
                }
            </remarks>
            <param name="toSetTable">Objeto de Salón Montado</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.ToSetTableController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.TransferController">
            <summary>
            Controlador de Transferencias
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.#ctor(biz.rebel_wings.Repository.RequestTransfer.IRequestTransferRepository,biz.rebel_wings.Repository.RequestTransfer.ICatAmountRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.fortia.Repository.RH.IRHTrabRepository,biz.bd2.Repository.Articulos.IArticulosRepository,biz.bd1.Repository.Articulos.IArticulosRespository,biz.bd1.Repository.Sucursal.ISucursalRepository,biz.bd2.Repository.Sucursal.ISucursalRepository)">
            <summary>
            Constructor
            </summary>
            <param name="requestTransferRepository"></param>
            <param name="catAmountRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="rhTrabRepository"></param>
            <param name="articulosRespositoryBd2"></param>
            <param name="articulosRespositoryBd1"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.GetByBranch(System.Int32,System.String)">
            <summary>
            GET:
            Retorna lista de Sucursales
            </summary>
            <param name="id">ID de sucursal</param>
            <returns></returns>
            <response code="200">Regresa el objeto</response>
            <response code="404">Si el objeto no existe</response>        
            <response code="500">Error interno de servidor</response> 
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.GetAmount(System.String)">
            <summary>
            GET:
            Retorna la lista de Cantidades 
            </summary>
            <param name="word">Palabra de busqueda</param>
            <returns></returns>
            <response code="200">Regresa lista de resultados similares</response>
            <response code="404">No existe coincidencias</response>        
            <response code="500">Error interno de servidor</response> 
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.GetAmount">
            <summary>
            GET:
            Regresa lista de Status
            </summary>
            <returns>Regresa lista de estatus</returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="404">No existe</response>        
            <response code="500">Error interno de servidor</response> 
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.GetById(System.Int32)">
            <summary>
            GET:
            Retorna objeto de Hacer Transferencias/Solicitud
            </summary>
            <remarks>
            Example:
            {
                "id": 1,
                "type": 1,
                "fromBranchId": 1,
                "toBranchId": 539314232,
                "date": "2021-11-09T22:49:03.803Z",
                "time": "23:59:59",
                "productId": 2574,
                "code": "CODE-101010",
                "amount": 1,
                "comment": "string",
                "createdBy": 1,
                "createdDate":
                "2021-11-09T22:49:03.803Z",
                "updatedBy": null,
                "updatedDate": null
            }
            </remarks>
            <param name="id">ID de Transferencias/Solicitud</param>
            <returns></returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="404">No existe</response>        
            <response code="500">Error interno de servidor</response> 
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.GetNotifications(System.Int32)">
            <summary>
            GET: regresa la lista de notificaciones 
            </summary>
            <param name="id">ID de sucursal</param>
            <returns></returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="500">Error interno de servidor</response>   
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.Post(api.rebel_wings.Models.RequestTransfer.RequestTransferDto)">
            <summary>
            POST:
            Agregar un nuevo HACER UNA TRANSFERENCIA/SOLICITAR UNA TRANSFERENCIA
            </summary>
            <param name="requestTransferDto">Objeto para agregar</param>
            <returns></returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="500">Error interno de servidor</response>   
        </member>
        <member name="M:api.rebel_wings.Controllers.TransferController.Put(api.rebel_wings.Models.RequestTransfer.RequestTransferDto)">
            <summary>
            PUT:
            Actualizar objeto de SOLICITAR UNA TRANSFERENCIA/SOLICITAR UNA TRANSFERENCIA
            </summary>
            <param name="requestTransferDto"></param>
            <returns></returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="404">No se encuentro este registro</response>        
            <response code="500">Error interno de servidor</response>   
        </member>
        <member name="T:api.rebel_wings.Controllers.ValidateAttendanceController">
            <summary>
            Controlador para Validación de Asistencia
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidateAttendanceController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.ValidateAttendance.IValidateAttendanceRepository,biz.fortia.Repository.RH.IRHTrabRepository)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
            <param name="validateAttendanceRepository"></param>
            <param name="rHTrabRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidateAttendanceController.GetById(System.Int32)">
            <summary>
            Obtener por ID de validación de asistencia
            </summary>
            <param name="id">ID de Validación de asistencia en caso de que exista uno</param>
            <returns>Regresa objeto de validación de asistencia</returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidateAttendanceController.GetAll(System.Int32)">
            <summary>
            Retorna todos los trabajadores de una sucursal
            </summary>
            <param name="id">ID de sucursal</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidateAttendanceController.Post(api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto)">
            <summary>
            Agregar un nuevo registro de VAlidación de asistencia
            </summary>
            <param name="validateAttendanceDto">Objeto de validadción de asistencia</param>
            <returns></returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>
        </member>
        <member name="T:api.rebel_wings.Controllers.ValidationGasController">
            <summary>
            Contralador de Validación de Gas
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidationGasController.#ctor(AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.ValidationGas.IValidationGasRepository,biz.rebel_wings.Repository.ValidationGas.IPhotoValidationGasRepository)">
            <summary>
            Contructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="validationGasRepository"></param>
            <param name="photoValidationGasRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidationGasController.GetById(System.Int32)">
            <summary>
            Retorna el validadción de gas por ID
            </summary>
            <param name="id">ID del salón montado</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidationGasController.Post(api.rebel_wings.Models.ValidationGas.ValidationGaDto)">
            <summary>
            Agrega Validación de Gas
            </summary>
            <remarks> 
            EXAMPLE :
            POST /ValidationGas
            {
            "id": 0,
            "branch": 0,
            "amount": 0,
            "photo": "string",
            "photoPath": "string",
            "comment": "string",
            "createdBy": 0,
             "createdDate": "2021-10-22T19:51:42.190Z",
             "updatedBy": 0,
             "updatedDate": "2021-10-22T19:51:42.190Z"
            }
            </remarks>
            <param name="validationGa">Objeto de Validación Gas</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="201">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>        
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidationGasController.Put(api.rebel_wings.Models.ValidationGas.ValidationGaDto)">
            <summary>
            Actualiza Validación de Gas
            </summary>
            <remarks> 
            EXAMPLE :
            
            PUT /ValidationGas
            {
            "id": 0,
            "branch": 0,
            "amount": 0,
            "photo": "string",
            "photoPath": "string",
            "comment": "string",
            "createdBy": 0,
             "createdDate": "2021-10-22T19:51:42.190Z",
             "updatedBy": 0,
             "updatedDate": "2021-10-22T19:51:42.190Z"
            }
            </remarks>
            <param name="validationGa">Objeto de Validación de Gas</param>
            <returns>Regresa respuesta exitosa caso contrario manda error 500 o 400 dependiendo del caso de error </returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>        
            <response code="415">Si la foto no cumple con los requisitos para subirla</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.ValidationGasController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.WaitListTableController">
            <summary>
            Mesas en Espera Controlador
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.#ctor(biz.rebel_wings.Repository.WaitlistTable.IWaitlistTableRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager,biz.rebel_wings.Repository.WaitlistTable.IPhotoWaitlistTableRepository)">
            <summary>
            Contructor
            </summary>
            <param name="waitlistTableRepository"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="photoWaitlistTableRepository"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.Post(api.rebel_wings.Models.WaitlistTable.WaitlistTableDto)">
            <summary>
            POST para agregar un nuevo Mesas en Espera
            </summary>
            <remarks>
            Sample Request:
            {
            "id": 0,
            "branch": 1,
             "waitlistTables": true,
             "howManyTables": 2,
             "numberPeople": 5,
             "createdBy": 1,
             "createdDate": "2021-10-26T17:54:55.450Z",
             "updatedBy": null,
             "updatedDate": null
            }
            </remarks>
            <param name="waitlistTable"></param>
            <returns></returns>
            <response code="200">Regresa respuesta exitosa de objeto agregado</response>
            <response code="400">Si el objeto no cumple con los requeriemientos necesarios</response>
            <response code="500">Error Interno</response>
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.Put(api.rebel_wings.Models.WaitlistTable.WaitlistTableDto)">
            <summary>
            
            </summary>
            <remarks> 
            EXAMPLE :
            
            PUT /WaitListTable
            {
                "id": 0,
                "branch": 0,
                "waitlistTables": true,
                "howManyTables": 0,
                "numberPeople": 0,
                "createdBy": 0,
                "createdDate": "2022-02-08T20:55:05.850Z",
                "updatedBy": 0,
                "updatedDate":
                "updatedDate": "2021-10-22T19:51:42.190Z"
            }
            </remarks>
            <param name="waitListTable">Object to send in From body</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.GetByBranch(System.Int32)">
            <summary>
            GET:
            Regresa lista de lista de esperas por sucursal
            </summary>
            <returns>Regresa lista de estatus</returns>
            <response code="200">Regresa el nuevo objeto creado</response>
            <response code="404">No existe</response>        
            <response code="500">Error interno de servidor</response> 
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.GetById(System.Int32)">
            <summary>
            Retorna la validacion de mesas en espera por ID
            </summary>
            <param name="id">ID del salón montado</param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WaitListTableController.Delete(System.Int32)">
            <summary>
            Delete:
            Remove photo by ID
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Controllers.WashBasinWithSoapPaperController">
            <summary>
            Controlador
            </summary>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.#ctor(biz.rebel_wings.Repository.WashBasinWithSoapPaper.IWashBasinWithSoapPaperRepository,biz.rebel_wings.Repository.BathRoomsOverallStatus.IPhotoWashBasinWithSoapPaperRepository,AutoMapper.IMapper,biz.rebel_wings.Services.Logger.ILoggerManager)">
            <summary>
            Constructor
            </summary>
            <param name="washBasinWithSoapPaperRepository"></param>
            <param name="photoWashBasinWithSoapPaperRepository"></param>
            <param name="mapper"></param>
            <param name="loggerManager"></param>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.GetById(System.Int32)">
            <summary>
            GET:
            Obtener por ID de Lavabos con jabón y papel 
            </summary>
            <param name="id">ID </param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.Get(System.Int32,System.Int32)">
            <summary>
            GET:
            Regrasa registro del día
            </summary>
            <param name="id"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.Post(api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto)">
            <summary>
            POST:
            Add new Lavabos con jabón y papel
            </summary>
            <param name="washBasinWithSoapPaperDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.Put(api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto)">
            <summary>
            UPDATE:
            Update Lavabos con jabón y papel
            </summary>
            <param name="washBasinWithSoapPaperDto"></param>
            <returns></returns>
        </member>
        <member name="M:api.rebel_wings.Controllers.WashBasinWithSoapPaperController.Delete(System.Int32)">
            <summary>
            DELETE:
            Remove a Photo Lavabos con jabón y papel
            </summary>
            <param name="id">PK</param>
            <returns></returns>
        </member>
        <member name="T:api.rebel_wings.Mapper.MapperProfile">
            <summary>
            Mapper de Models a Entities
            </summary>
        </member>
        <member name="M:api.rebel_wings.Mapper.MapperProfile.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Albaran.AlbaranDto">
            <summary>
            Modelo de Albaran
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.BranchId">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.AlbaranDate">
            <summary>
            Fecha de Albaran viene de base de cliente, funciona como llave foranea para identificar el registro de su dato
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.AlbaranTime">
            <summary>
            Hora de Albaran viene de base de cliente, funciona como llave foranea para identificar el registro de su dato
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.AlbaranDescription">
            <summary>
            Descripcion de Albaran 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.NumSerie">
            <summary>
            Numero de serie
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.NumAlbaran">
            <summary>
            Numero de Albaran
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.N">
            <summary>
            N => no idea
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.StatusId">
            <summary>
            Estatus ID => FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.TimeArrive">
            <summary>
            Hora de arribo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.CreatedBy">
            <summary>
            Creado Por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.CreatedDate">
            <summary>
            Fecha de creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.UpdatedBy">
            <summary>
            Actualizado Por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Albaran.AlbaranDto.UpdatedDate">
            <summary>
            Fecha de actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Articulos.Articulo1Dto">
            <summary>
            Modelo de Articulos
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Articulos.ItemsDto">
            <summary>
            Modelo de Articluos Custom
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:api.rebel_wings.Models.AudioVideo.AudioVideoDto" -->
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.BranchId">
            <summary>
            ID de sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.TvWorksProperly">
            <summary>
            ¿Funcionan de manera correcta todas las TVs en piso?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.CommentTvWorksProperly">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.SpeakersWorkProperly">
            <summary>
            ¿Funcionan de manera correcta todas las bocinas en piso?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.CommentSpeakersWorkProperly">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.TerraceTvWorksProperly">
            <summary>
            ¿Funcionan de manera correcta todas las TVs en terraza?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.CommentTerraceTvWorksProperly">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.TerraceSpeakersWorkProperly">
            <summary>
            ¿Funcionan de manera correcta todas las bocinas en terraza?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.AudioVideo.AudioVideoDto.CommentTerraceSpeakersWorkProperly">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Bar.BarDto">
            <summary>
            Models
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.Sink">
            <summary>
            Tarja
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.Mixer">
            <summary>
            Mezcladora
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.Refrigerator">
            <summary>
            Refrigerador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bar.BarDto.ElectricalConnections">
            <summary>
            Conexiones eléctricas
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.Id">
            <summary>
            PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.DoesAnyBathroomLeakMen">
            <summary>
            Does Any Bathroom Leak Men
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.CommentDoesAnyBathroomLeakMen">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.IsThereAnyFaultsMen">
            <summary>
            Is There Any Faults Men
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.CommentAreThereAnyFaultsMen">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.DoesAnyBathroomLeakWomen">
            <summary>
            Does Any Bathroom Leak Women
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.CommentDoesAnyBathroomLeakWomen">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.IsThereAnyFaultsWomen">
            <summary>
            Is There Any Faults Women
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BathRoomsOverallStatus.BathRoomsOverallStatusDto.CommentAreThereAnyFaultsWomen">
            <summary>
            Comment
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Bathroom.BathroomDto">
            <summary>
            Models
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.Urinals">
            <summary>
            Mingitorios
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.HandWashBasin">
            <summary>
            Lavamanos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.Luminaires">
            <summary>
            Luminarias
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Bathroom.BathroomDto.Doors">
            <summary>
            Puertas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BanosMatutino.BanosMatutinoDto.Branch">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BanosMatutino.BanosMatutinoDto.Comment">
            <summary>
            Comentarios
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BanosMatutino.PhotoBanosMatutinoDto.BanosMatutinoId">
            <summary>
            Llave foranea de To Set Table (Salón Montado)
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BanosMatutino.PhotoBanosMatutinoDto.PhotoPath">
            <summary>
            Extensión de Foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.BanosMatutino.PhotoBanosMatutinoDto.Photo">
            <summary>
            Base64 de la Foto
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto">
            <summary>
            Modelo de Volado de efectivo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.Amount">
            <summary>
            Monto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.AlarmTime">
            <summary>
            Fecha de envio de la alarma
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.ElapsedAlarmTime">
            <summary>
            Fecha de envio de la alarma
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.CreatedBy">
            <summary>
            Quien lo Creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.UpdatedBy">
            <summary>
            Quien fue el ultimo en actualizar
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.UpdatedDate">
            <summary>
            Fecha ultima de actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.CashRegisterShortageDto.PhotoCashRegisterShortages">
            <summary>
            Colección de Fotos
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto">
            <summary>
            Modelo de fotos para Volado de efectivo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.CashRegisterShortageId">
            <summary>
            Llave foranea de Volado de efectivo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.Photo">
            <summary>
            Foto en Base64
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.PhotoPath">
            <summary>
            Extensión de foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.CreatedBy">
            <summary>
            Quien lo Creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.UpdatedBy">
            <summary>
            Quien fue el ultimo en actualizar
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CashRegisterShortage.PhotoCashRegisterShortageDto.UpdatedDate">
            <summary>
            Fecha ultima de actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CatStatusSalesExpectations.CatStatusStockChickenDto.Status">
            <summary>
            Nombre del estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CatStatusSalesExpectations.CatStatusStockChickenDto.CreatedBy">
            <summary>
            Quien creo el estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CatStatusSalesExpectations.CatStatusStockChickenDto.CreatedDate">
            <summary>
            Fecha de Creación
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.CheckTable.CheckTableDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.NumTable">
            <summary>
            Num Table
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.ProductOne">
            <summary>
            One
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.CommentProductOne">
            <summary>
            Comment One
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.ProductTwo">
            <summary>
            Two
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.CommentProductTwo">
            <summary>
            Comment Two
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.ProductThree">
            <summary>
            Three
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.CommentProductThree">
            <summary>
            Comment Three
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.ProductFour">
            <summary>
            Four
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.CheckTable.CheckTableDto.CommentProductFour">
            <summary>
            Comment Four
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Chicken.KitchenDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Sink">
            <summary>
            Tarjas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Mixer">
            <summary>
            Mezcladoras
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Strainer">
            <summary>
            Coladeras
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Fryer">
            <summary>
            Freidoras
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Extractor">
            <summary>
            Extracción
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Refrigerator">
            <summary>
            Refrigeradores
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.InteriorTemperature">
            <summary>
            Temperatura interior
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Doors">
            <summary>
            Puertas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.CorrectDistance">
            <summary>
            Distancia correcta hacia la pared
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.ElectricalConnections">
            <summary>
            Conexiones eléctricas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Chicken.KitchenDto.Luminaires">
            <summary>
            Luminarias
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ControlCenter.ControlCenter">
            <summary>
            Modelo de Centro de Control
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.Name">
            <summary>
            NOMBRE
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.Description">
            <summary>
            DESCRIPCIÓN
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.IsPercentageOrComplete">
            <summary>
            ¿Es Porcentaje o Completado?
            Completado es ==> FALSE
            Porcentaje es ==> TRUE
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.IsComplete">
            <summary>
            ¿Esta completado?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.Percentage">
            <summary>
            Porcentaje
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.Color">
            <summary>
            Color de estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ControlCenter.ControlCenter.Id">
            <summary>
            ID de Task si es que existe
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.ActivityReportAdmin">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.ActivityReportAdmin.OmissionActivities">
            <summary>
            Omission of Activities
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.ActivityReportAdmin.Tickets">
            <summary>
            Tickets
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.ActivityReportAdmin.AverageNumberAttendances">
            <summary>
            Average number of attendances
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.ActivityReportAdmin.AverageEvaluation">
            <summary>
            Average Evaluation
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.BranchWithMostOmissions">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.BranchWithMostOmissions.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.BranchWithMostOmissions.BranchName">
            <summary>
            Branch Name
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.BranchWithMostOmissions.Percentage">
            <summary>
            Percentage
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.DashboardAdmin">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.Dashboard.DashboardAdmin.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.DashboardAdmin.ActivityReportAdmin">
            <summary>
            Activity Report 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.DashboardAdmin.BranchWithMostOmissionsCollection">
            <summary>
            Branches with the most omissions
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.DashboardAdmin.MostOmittedActivitiesCollection">
            <summary>
            Most omitted activities
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.DashboardAssistance">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.Dashboard.DashboardAssistance.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.DashboardAssistance.AssistanceMorningsCollection">
            <summary>
            Mañana
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.DashboardAssistance.AssistanceEveningsCollection">
            <summary>
            Vespertino
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.Dashboard.DashboardRegional.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.Task">
            <summary>
            Tasks
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.MostOmittedActivities">
            <summary>
            Model
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Dashboard.OmissionsPerShift">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.OmissionsPerShift.Shift">
            <summary>
            Shift
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Dashboard.OmissionsPerShift.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.LightBeer">
            <summary>
            Chope clara
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DarkBeer">
            <summary>
            Chope oscura
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DrinkOne">
            <summary>
            Elige 5 bebidas aleatorias
            ¿Fría?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DrinkTwo">
            <summary>
            Elige 5 bebidas aleatorias
            ¿Fría?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DrinkThree">
            <summary>
            Elige 5 bebidas aleatorias
            ¿Fría?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DrinkFour">
            <summary>
            Elige 5 bebidas aleatorias
            ¿Fría?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.DrinksTemperatureDto.DrinkFive">
            <summary>
            Elige 5 bebidas aleatorias
            ¿Fría?
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.DrinksTemperature.PhotoDrinksTemperatureDto">
            <summary>
            Modelo de Fotos de Temperatura de bebidas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.PhotoDrinksTemperatureDto.DrinkTemperatureId">
            <summary>
            FK => Lave foranea de Temperatura de bebidas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.PhotoDrinksTemperatureDto.Photo">
            <summary>
            Foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.PhotoDrinksTemperatureDto.PhotoPath">
            <summary>
            Extensión
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.DrinksTemperature.PhotoDrinksTemperatureDto.Type">
            <summary>
            Tipo de Foto:
            1 ==> Chope clara
            2 ==> Chope oscura
            3 ==> 5 bebidas aleatorias
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.Id">
            <summary>
            ID ==> PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.BranchId">
            <summary>
            Branch
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.CommentDirectDeliveriesPerDay">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.RevisionNumber">
            <summary>
            Revision Number
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.CommentRevisionNumber">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.EntriesChargedAsDeliveryNoteDto.PhotoEntriesChargedAsDeliveryNotes">
            <summary>
            Photos
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto.Id">
            <summary>
            ID ==> PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto.EntriesChargedAsDeliveryNoteId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto.Photo">
            <summary>
            Photo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.EntriesChargedAsDeliveryNote.PhotoEntriesChargedAsDeliveryNoteDto.PhotoPath">
            <summary>
            PAth
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto">
            <summary>
            Modelo de Limpieza de Baños y salón
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.BranchId">
            <summary>
            ID de Sucursal 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.CreatedBy">
            <summary>
            Quien creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.UpdatedBy">
            <summary>
            Quien actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.UpdatedDate">
            <summary>
            Cuando se actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.LivingRoomBathroomCleaningDto.PhotoLivingRoomBathroomCleanings">
            <summary>
            Colleción de fotos
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto">
            <summary>
            Modelo de Fotos 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.LivingRoomBathroomCleaningId">
            <summary>
            ID de Limpieza de salón y baños =>FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.Photo">
            <summary>
            Fotp
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.PhotoPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.CreatedBy">
            <summary>
            Quien creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.UpdatedBy">
            <summary>
            Quien actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.LivingRoomBathroomCleaning.PhotoLivingRoomBathroomCleaningDto.UpdatedDate">
            <summary>
            Cuando se actualizo
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.OrderScheduleReviewDto.PhotoOrderScheduleReviews">
            <summary>
            Collection Photos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.PhotoOrderScheduleReviewDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.PhotoOrderScheduleReviewDto.OrderScheduleReviewId">
            <summary>
            Fk
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.PhotoOrderScheduleReviewDto.Photo">
            <summary>
            Photo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.OrderScheduleReview.PhotoOrderScheduleReviewDto.PhotoPath">
            <summary>
            Path
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto">
            <summary>
            Modelo de Pollo Precocido
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto.CommentPrecookedChickenOnTheTable">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto.CommentPrecookedChickenInGeneral">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.PrecookedChicken.PrecookedChickenDto.CommentBonelesOrPrecookedPotatoes">
            <summary>
            Comment
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RequestTransfer.CatAmountDto">
            <summary>
            Catalogo de Montos
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto">
            <summary>
            Modelo de Transferencias
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Type">
            <summary>
            1 => Si es Transferido
            2 => Si es Solicitado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Status">
            <summary>
            Estatus 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.FromBranchId">
            <summary>
            De Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.ToBranchId">
            <summary>
            A Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Date">
            <summary>
            Fecha
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Time">
            <summary>
            Hora
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.ProductId">
            <summary>
            Producto Id
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Product">
            <summary>
            Nombre de producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Code">
            <summary>
            Codigo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Amount">
            <summary>
            Cantidad
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferConsultDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RequestTransfer.RequestTransferDto">
            <summary>
            Modelo Transferencias
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferDto.Type">
            <summary>
            1 => Si es Transferido
            2 => Si es Solicitado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferDto.Status">
            <summary>
            Estatus 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto">
            <summary>
            Modelo de Solicitud/transferencias Lista New
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto.Name">
            <summary>
            Nombre de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto.Description">
            <summary>
            Descripción
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto.TranferId">
            <summary>
            ID si tiene Transferido
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.RequestTransferListNewDto.RequestId">
            <summary>
            ID de tiene Solicitado
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RequestTransfer.TransfersListDto">
            <summary>
            Lista de Transferencias
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.TransfersListDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.TransfersListDto.Name">
            <summary>
            Nombre de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.TransfersListDto.Description">
            <summary>
            Descripción
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.TransfersListDto.TranferId">
            <summary>
            ID si tiene Transferido
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RequestTransfer.TransfersListDto.RequestId">
            <summary>
            ID de tiene Solicitado
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RiskProduct.RiskProductDto">
            <summary>
            Modelo de Producto en riesgo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.BranchId">
            <summary>
            ID de Sucursal 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.ProductId">
            <summary>
            ID de Producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.Code">
            <summary>
            Codigo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.CreatedBy">
            <summary>
            Quien lo creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.CreatedDate">
            <summary>
            Fecha de Creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.UpdatedBy">
            <summary>
            Quien Actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductDto.UpdatedDate">
            <summary>
            Fecha de Actualizaión
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.RiskProduct.RiskProductGetDto">
            <summary>
            Model Producto en riesgo GET
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.BranchId">
            <summary>
            ID de Sucursal 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.ProductId">
            <summary>
            ID de Producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.Product">
            <summary>
            Nombre de producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.Code">
            <summary>
            Codigo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.CreatedBy">
            <summary>
            Quien lo creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.CreatedDate">
            <summary>
            Fecha de Creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.UpdatedBy">
            <summary>
            Quien Actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.RiskProduct.RiskProductGetDto.UpdatedDate">
            <summary>
            Fecha de Actualizaión
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.PackageUsed.Id">
            <summary>
            ID de paquete
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.PackageUsed.Amount">
            <summary>
            Cantidad Usada
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.PackageUsed.UserId">
            <summary>
            ID de usuario que esta agregando 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.SalesExpectations.SalesExpectationGet">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.SalesExpectationGet.SalesExpectationTotal">
            <summary>
            Sales Expectation Total
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.SalesExpectationGet.AmountTotal">
            <summary>
            Total
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.SalesExpectationGet.CompletePercentage">
            <summary>
            Complete 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto">
            <summary>
            Modelo De Stock de Pollo para Admin
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.BranchId">
            <summary>
            ID de sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.SalesExpectations">
            <summary>
            Expectativa de Ventas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.Amount">
            <summary>
            Cantidad
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.CreatedBy">
            <summary>
            Creado Por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.CreatedDate">
            <summary>
            Fecha de Creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.UpdatedBy">
            <summary>
            Actualizado Por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenByBranchDto.UpdatedDate">
            <summary>
            Fecha de Actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.Branch">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.Code">
            <summary>
            Código de Producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.Amount">
            <summary>
            Cantidad de Kilos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.StatusId">
            <summary>
            Status de Producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.CreatedBy">
            <summary>
            Quien Creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.CreatedDate">
            <summary>
            Fecha de creación del registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.UpdatedBy">
            <summary>
            Ultimo usuario que actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenDto.UpdatedDate">
            <summary>
            Fecha ultima de actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenGetDto.Id">
            <summary>
            ID de Stock de Pollo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenGetDto.Code">
            <summary>
            Código de Producto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenGetDto.Amount">
            <summary>
            Cantidad
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenGetDto.Status">
            <summary>
            Estatus de Stock de Pollo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.SalesExpectations.StockChickenGetDto.Created">
            <summary>
            Fecha de Creación 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Salon.SalonDto">
            <summary>
            Models
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.AccessDoors">
            <summary>
            Puertas de acceso
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.Badges">
            <summary>
            Chapas / Badges
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.Luminaires">
            <summary>
            Luminarias
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.Switches">
            <summary>
            Contactos y apagadores
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.FurnitureOne">
            <summary>
            Mobiliario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.FurnitureTwo">
            <summary>
            Mobiliario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.Boths">
            <summary>
            Boths
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Salon.SalonDto.FireExtinguishers">
            <summary>
            Extintores
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.CreatedBy">
            <summary>
            Quien lo Creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.UpdatedBy">
            <summary>
            Quien fue el ultimo en actualizar
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.UpdatedDate">
            <summary>
            Fecha ultima de actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TabletSafeKeeping.TabletSafeKeepingDto.PhotoTabletSageKeepings">
            <summary>
            Colección de Fotos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskBranchDto.TaskId">
            <summary>
            ID de tarea
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskBranchDto.BranchId">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.Icon">
            <summary>
            Icono de tarea (Base64)
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.IconPath">
            <summary>
            Extensión de imagen
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.AssignedToId">
            <summary>
            A quien se le asigna
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.WorkshiftId">
            <summary>
            Turno
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.Name">
            <summary>
            Nombre de Tarea
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.Description">
            <summary>
            Descripción
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.CreatedBy">
            <summary>
            Creado Por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.CreatedDate">
            <summary>
            Fecha de creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.UpdatedBy">
            <summary>
            Actualizado por
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.UpdatedDate">
            <summary>
            Fecha actualizado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.TaskBranches">
            <summary>
            Sucursales
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Task.TaskDto.FormFields">
            <summary>
            Campos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Id">
            <summary>
            ID Ticketing
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.NoTicketing">
            <summary>
            No. Ticketing
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Opened">
            <summary>
            Opened Date
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Closed">
            <summary>
            Closed Date
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Regional">
            <summary>
            Regional
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.Branch">
            <summary>
            Branch
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGet.BranchId">
            <summary>
            Branch FK
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Ticketing.TicketingGetDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.Ticketing.TicketingGetDto.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.Id">
            <summary>
            PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.WhereAreYouLocated">
            <summary>
            Where are you located
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.SpecificLocation">
            <summary>
            Specific location
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.NoTicket">
            <summary>
            No. Ticket
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.DateOpen">
            <summary>
            Date Open
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.DateClosed">
            <summary>
            Date Closed
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.Cost">
            <summary>
            Cost
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.DescribeProblem">
            <summary>
            Description Problem
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.CreatedBy">
            <summary>
            Created By
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.CreatedDate">
            <summary>
            Created Date
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.UpdatedBy">
            <summary>
            Updated By
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingGetDto.UpdatedDate">
            <summary>
            Updated date
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Ticketing.TicketingStatus">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingStatus.ClosedDate">
            <summary>
            Fecha de cierre
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingStatus.Status">
            <summary>
            Estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingStatus.UserId">
            <summary>
            ID User
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticketing.TicketingStatus.Cost">
            <summary>
            Monto
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto.Id">
            <summary>
            ID ==> PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto.TicketTableId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto.Photo">
            <summary>
            Photo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.PhotoTicketTableDto.PhotoPath">
            <summary>
            Path
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.TicketTable.TicketTableDto">
            <summary>
            Model
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.TicketTable.TicketTableDto.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.TicketTableDto.Id">
            <summary>
            ID ==> PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.TicketTableDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.TicketTableDto.CommentFoodOnTable">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.TicketTableDto.CommentTicket">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.TicketTable.TicketTableDto.PhotoTicketTables">
            <summary>
            Photos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.BranchName">
            <summary>
            Nombre de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.BranchId">
            <summary>
            Id de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.UserName">
            <summary>
            Nombre de Usuario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.PartBranch">
            <summary>
            ¿En qué parte de la sucursal te encuentras?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.SpecificSection">
            <summary>
            Lugar específico
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.Status">
            <summary>
            Nombre de Estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.Maintenance.Id">
            <summary>
            Ticket ID
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Ticket.PhotoTicketDto">
            <summary>
            Modelo de Fotografías de Ticket
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.TicketId">
            <summary>
            FK => Levantamiento de ticket
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.Photo">
            <summary>
            Fotografía (Base64)
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.PhotoPath">
            <summary>
            Extensión de fotografía
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.CreatedBy">
            <summary>
            Quien lo creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.UpdatedBy">
            <summary>
            Quien Actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.PhotoTicketDto.UpdatedDate">
            <summary>
            Fecha actualizado
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Ticket.TicketDto">
            <summary>
            Modelo de Levantamiento de ticket
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.PartBranchId">
            <summary>
            ¿En qué parte de la sucursal te encuentras?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.StatusId">
            <summary>
            ID de Estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.SpecificSectionId">
            <summary>
            Seleccina el lugar específico
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.Problem">
            <summary>
            Describe el problema encontrado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.CreatedBy">
            <summary>
            Quien lo creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.CreatedDate">
            <summary>
            Cuando se creo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.UpdatedBy">
            <summary>
            Quien Actualizo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.UpdatedDate">
            <summary>
            Fecha actualizado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketDto.PhotoTickets">
            <summary>
            Fotografías
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.BranchName">
            <summary>
            NOmbre de la Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.PartBranchId">
            <summary>
            ¿En qué parte de la sucursal te encuentras?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.StatusId">
            <summary>
            ID de Estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.SpecificSectionId">
            <summary>
            Seleccina el lugar específico
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.Problem">
            <summary>
            Describe el problema encontrado
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.PartBranch">
            <summary>
            Catalogo de Parte de la sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.SpecificSection">
            <summary>
            Catalogo de Sección específica
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.Status">
            <summary>
            Catalogo de Estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Ticket.TicketGetDto.PhotoTickets">
            <summary>
            Fotografías
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Tip.PhotoTipDto">
            <summary>
            Modelo de Fotos de Propinas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.TipId">
            <summary>
            ID de Propinas => FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.Photo">
            <summary>
            Foto Base64
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.PhotoPath">
            <summary>
            Extensión de foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.CreatedBy">
            <summary>
            Fecha de creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.CreatedDate">
            <summary>
            Fecha de creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.PhotoTipDto.UpdatedDate">
            <summary>
            Fecha de actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.Tip.TipDto">
            <summary>
            Clase de Resguardo de Propina
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.Id">
            <summary>
            ID 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.Amount">
            <summary>
            Monto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.Comment">
            <summary>
            Comentarios
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.CreatedDate">
            <summary>
            Fecha de creación
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.UpdatedDate">
            <summary>
            Fecha de actualización
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.Tip.TipDto.PhotoTips">
            <summary>
            Colección de fotos de resguardo de propinas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ToSetTable.ToSetTableDto.Branch">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.User.UserDto">
            <summary>
            Modelo de Usuario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.Id">
            <summary>
            ID de usuario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.Email">
            <summary>
            Correo electronico
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.Password">
            <summary>
            Contraseña 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.ClabTrab">
            <summary>
            Clabe de trbajador que viene de FORTIA
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.Token">
            <summary>
            TOKEN
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.Name">
            <summary>
            Nombre 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.LastName">
            <summary>
            Apellido
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.MotherName">
            <summary>
            Apellido
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.RoleId">
            <summary>
            Rol de usuario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.CreatedDate">
            <summary>
            Fecha de creación 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserDto.UpdatedDate">
            <summary>
            Fecha de actualización de registro
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.User.UserReturnDto">
            <summary>
            Modelo de Usuario de Restorno
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Id">
            <summary>
            ID de Usuario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Email">
            <summary>
            Correo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Password">
            <summary>
            Contraseña
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.ClabTrab">
            <summary>
            Clave de Trabajador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Name">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.LastName">
            <summary>
            Apellido Paterno
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.MotherName">
            <summary>
            Apellido Materno
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.BranchName">
            <summary>
            Nombre de sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.User.UserReturnDto.Branch">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto">
            <summary>
            Modelo de Catalogo de Validación de Asistencia
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.Status">
            <summary>
            Nombre del estatus
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.CreatedDate">
            <summary>
            Fecha de Creación 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.CatStatusValidateAttendanceDto.UpdatedDate">
            <summary>
            Fecha de actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto">
            <summary>
            Modelo de Validación de Asistencia
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.BranchId">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.Attendence">
            <summary>
            ID de estatus de Validación de asistencia
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.ClabTrab">
            <summary>
            Clave de trabajador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.Time">
            <summary>
            Fecha y Hora de Entrada
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.CreatedDate">
            <summary>
            Fecha de creación 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceDto.UpdatedDate">
            <summary>
            Fecha de ultima actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList">
            <summary>
            Modelo para Arreglo de lista de trabajadores por Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.AttendanceId">
            <summary>
            ID de validación de asistencia de día en caso de que exista
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.Avatar">
            <summary>
            Imagen de Trabajador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.Name">
            <summary>
            Nombre de trabajador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.JobTitle">
            <summary>
            Puesto Laboral
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.Workshift">
            <summary>
            Turno 
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.TimeDelay">
            <summary>
            Retardos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.ValidateAttendance">
            <summary>
            Estatus de validación de asistencia INFO viene de FORTIA
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.ClabTrab">
            <summary>
            Clabe de trabajador
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidateAttendance.ValidateAttendanceList.Status">
            <summary>
            Estatus de Si llegó o No llegó
            id |	status
            ---------------
            1  |	Llegó
            2  |	No Llegó
            3  |	Retardo
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto">
            <summary>
            Modelo de Foto para Validación de Gas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.ValidationGasId">
            <summary>
            Llave foranea de Validación de Gas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.Photo">
            <summary>
            Foto en Base 64 para crear, se retorna el path de la imagen en el GET
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.PhotoPath">
            <summary>
            Extensión de Foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.CreatedDate">
            <summary>
            Fecha de creación de registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.PhotoValidationGaDto.UpdatedDate">
            <summary>
            Fecha de última actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.ValidationGas.ValidationGaDto">
            <summary>
            Modelo de Validación de Gas
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.ValidationGas.ValidationGaDto.#ctor">
            <summary>
            ValidationGaDto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.Branch">
            <summary>
            Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.Amount">
            <summary>
            Cantidad de Litros
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.CreatedDate">
            <summary>
            Fecha de creación de regitro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.UpdatedDate">
            <summary>
            Fecha de actualización de registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.ValidationGas.ValidationGaDto.PhotoValidationGas">
            <summary>
            Arreglo de fotos 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto">
            <summary>
            Modelo de Foto para Validación de Gas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.Id">
            <summary>
            ID => PK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.WaitlistTableId">
            <summary>
            Llave foranea de Validación de Gas
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.Photo">
            <summary>
            Foto en Base 64 para crear, se retorna el path de la imagen en el GET
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.PhotoPath">
            <summary>
            Extensión de Foto
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.CreatedBy">
            <summary>
            Quien creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.CreatedDate">
            <summary>
            Fecha de creación de registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.UpdatedBy">
            <summary>
            Quien actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.PhotoWaitlistTableDto.UpdatedDate">
            <summary>
            Fecha de última actualización
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto">
            <summary>
            Modelo de Validación de Mesas en espera
            </summary>
        </member>
        <member name="M:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.#ctor">
            <summary>
            WaitlistTable
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.Branch">
            <summary>
            ID de Sucursal
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.WaitlistTables">
            <summary>
            ¿Hubo mesas en espera?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.HowManyTables">
            <summary>
            ¿Cuántas mesas hubo en espera?
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.NumberPeople">
            <summary>
            Número de personas en espera por mesa
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.CreatedBy">
            <summary>
            ID de usuario que creo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.CreatedDate">
            <summary>
            Fecha de creación de registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.UpdatedBy">
            <summary>
            FID de usuario que actualizo el registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.UpdatedDate">
            <summary>
            Fecha de actualización de registro
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.Comment">
            <summary>
            Comentario
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WaitlistTable.WaitlistTableDto.PhotoWaitlistTables">
            <summary>
            Arreglo de fotos 
            </summary>
        </member>
        <member name="T:api.rebel_wings.Models.WashBasinWithSoapPaper.PhotoWashBasinWithSoapPaperDto">
            <summary>
            Model Photos
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.PhotoWashBasinWithSoapPaperDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.PhotoWashBasinWithSoapPaperDto.WashbasinWithSoapPaperId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.PhotoWashBasinWithSoapPaperDto.Photo">
            <summary>
            Photo
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.PhotoWashBasinWithSoapPaperDto.PhotoPath">
            <summary>
            Photo Path
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto" -->
        <member name="M:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.BranchId">
            <summary>
            FK
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.IsThereSoapPaper">
            <summary>
            Is There a Soap and Paper
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.IsThereDryer">
            <summary>
            Is There a Soap and Paper
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.CommentSoapPaper">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:api.rebel_wings.Models.WashBasinWithSoapPaper.WashBasinWithSoapPaperDto.PhotoWashBasinWithSoapPapers">
            <summary>
            Collection Photos
            </summary>
        </member>
    </members>
</doc>
